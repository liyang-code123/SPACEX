{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/liyang/Developer/Laioffer/spaceX/starlink/src/components/WorldMap.js\";\nimport React, { Component } from 'react';\nimport { feature } from 'topojson-client';\nimport axios from 'axios';\nimport { geoKavrayskiy7 } from 'd3-geo-projection';\nimport { geoGraticule, geoPath } from 'd3-geo';\nimport { select as d3Select } from 'd3-selection';\nimport { WORLD_MAP_URL } from \"../constants\";\nconst width = 960;\nconst height = 600;\n\nclass WorldMap extends Component {\n  componentDidMount() {\n    axios.get(WORLD_MAP_URL).then(res => {\n      console.log(res);\n      const {\n        data\n      } = res;\n      const land = feature(data, data.objcts.countries);\n    }).catch(err => {\n      console.log('Error in fetch world map data: ', err.message);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"world map\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default WorldMap;","map":{"version":3,"sources":["/Users/liyang/Developer/Laioffer/spaceX/starlink/src/components/WorldMap.js"],"names":["React","Component","feature","axios","geoKavrayskiy7","geoGraticule","geoPath","select","d3Select","WORLD_MAP_URL","width","height","WorldMap","componentDidMount","get","then","res","console","log","data","land","objcts","countries","catch","err","message","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,QAAtC;AACA,SAASC,MAAM,IAAIC,QAAnB,QAAmC,cAAnC;AAEA,SAASC,aAAT,QAA6B,cAA7B;AAEA,MAAMC,KAAK,GAAG,GAAd;AACA,MAAMC,MAAM,GAAG,GAAf;;AAEA,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAC7BY,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,KAAK,CAACW,GAAN,CAAWL,aAAX,EACKM,IADL,CACWC,GAAG,IAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAWH,GAAjB;AACA,YAAMI,IAAI,GAAGlB,OAAO,CAACiB,IAAD,EAAOA,IAAI,CAACE,MAAL,CAAYC,SAAnB,CAApB;AACH,KALL,EAMKC,KANL,CAMYC,GAAG,IAAI;AACXP,MAAAA,OAAO,CAACC,GAAR,CAAa,iCAAb,EAAgDM,GAAG,CAACC,OAApD;AACH,KARL;AASH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAlB4B;;AAqBjC,eAAed,QAAf","sourcesContent":["import React, {Component} from 'react';\nimport { feature } from 'topojson-client';\nimport axios from 'axios';\nimport { geoKavrayskiy7 } from 'd3-geo-projection';\nimport { geoGraticule, geoPath } from 'd3-geo';\nimport { select as d3Select } from 'd3-selection';\n\nimport { WORLD_MAP_URL} from \"../constants\";\n\nconst width = 960;\nconst height = 600;\n\nclass WorldMap extends Component {\n    componentDidMount() {\n        axios.get( WORLD_MAP_URL)\n            .then( res => {\n                console.log(res);\n                const { data } = res;\n                const land = feature(data, data.objcts.countries)\n            })\n            .catch( err => {\n                console.log( 'Error in fetch world map data: ', err.message)\n            })\n    }\n    render() {\n        return (\n            <div>\n                world map\n            </div>\n        );\n    }\n}\n\nexport default WorldMap;"]},"metadata":{},"sourceType":"module"}