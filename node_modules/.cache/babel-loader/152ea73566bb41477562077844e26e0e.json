{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/liyang/Developer/Laioffer/spaceX/starlink/src/components/SatelliteList.js\";\nimport React, { Component } from 'react';\nimport { List, Avatar, Button, Checkbox, Spin } from 'antd';\nimport satellite from \"../assets/images/satellite.svg\";\n\nclass SatelliteList extends Component {\n  constructor() {\n    super();\n\n    this.onChange = e => {\n      const {\n        dataInfo,\n        checked\n      } = e.target;\n      const {\n        selected\n      } = this.state;\n      const list = this.addOrRemove(dataInfo, checked, selected);\n      this.setState({\n        selected: list\n      });\n    };\n\n    this.addOrRemove = (item, status, list) => {\n      const found = list.some(entry => entry.satid === item.satid);\n\n      if (status && !found) {\n        list.push(item);\n      }\n\n      if (!status && found) {\n        list = list.filter(entry => {\n          return entry.satid !== item.satid;\n        });\n      }\n\n      return list;\n    };\n\n    this.onShowSatMap = () => {\n      this.props.onShowMap(this.state.selected);\n    };\n\n    this.state = {\n      selected: [],\n      isLoad: false\n    };\n  }\n\n  render() {\n    const satList = this.props.satInfo ? this.props.satInfo.above : [];\n    const {\n      isLoad\n    } = this.props;\n    const {\n      selected\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sat-list-box\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"sat-list-btn\",\n        size: \"large\",\n        disabled: selected.length === 0,\n        onClick: this.onShowSatMap,\n        children: \"Track on the map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), isLoad ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spin-box\",\n        children: /*#__PURE__*/_jsxDEV(Spin, {\n          tip: \"Loading...\",\n          size: \"large\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(List, {\n        className: \"sat-list\",\n        itemLayout: \"horizontal\",\n        size: \"small\",\n        dataSource: satList,\n        renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n          actions: [/*#__PURE__*/_jsxDEV(Checkbox, {\n            dataInfo: item,\n            onChange: this.onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 47\n          }, this)],\n          children: /*#__PURE__*/_jsxDEV(List.Item.Meta, {\n            avatar: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: 50,\n              src: satellite\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 49\n            }, this),\n            title: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.satname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 48\n            }, this),\n            description: `Launch Date: ${item.launchDate}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SatelliteList;","map":{"version":3,"sources":["/Users/liyang/Developer/Laioffer/spaceX/starlink/src/components/SatelliteList.js"],"names":["React","Component","List","Avatar","Button","Checkbox","Spin","SatelliteList","constructor","onChange","e","dataInfo","checked","target","selected","state","list","addOrRemove","setState","item","status","found","some","entry","satid","push","filter","onShowSatMap","props","onShowMap","isLoad","render","satList","satInfo","above","length","satellite","satname","launchDate"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { List, Avatar, Button, Checkbox, Spin } from 'antd';\nimport satellite from \"../assets/images/satellite.svg\";\n\nclass SatelliteList extends Component {\n    constructor(){\n        super();\n        this.state = {\n            selected: [],\n            isLoad: false\n        };\n    }\n\n    onChange = e => {\n        const { dataInfo, checked } = e.target;\n        const { selected } = this.state;\n        const list = this.addOrRemove(dataInfo, checked, selected);\n        this.setState({ selected: list })\n    }\n\n    addOrRemove = (item, status, list) => {\n        const found = list.some( entry => entry.satid === item.satid);\n        if(status && !found){\n            list.push(item)\n        }\n\n        if(!status && found){\n            list = list.filter( entry => {\n                return entry.satid !== item.satid;\n            });\n        }\n        return list;\n    }\n\n    onShowSatMap = () =>{\n        this.props.onShowMap(this.state.selected);\n    }\n\n    render() {\n        const satList = this.props.satInfo ? this.props.satInfo.above : [];\n        const { isLoad } = this.props;\n        const { selected } = this.state;\n\n        return (\n            <div className=\"sat-list-box\">\n                <Button className=\"sat-list-btn\"\n                        size=\"large\"\n                        disabled={ selected.length === 0}\n                        onClick={this.onShowSatMap}\n                >Track on the map</Button>\n                <hr/>\n\n                {\n                    isLoad ?\n                        <div className=\"spin-box\">\n                            <Spin tip=\"Loading...\" size=\"large\" />\n                        </div>\n                        :\n                        <List\n                            className=\"sat-list\"\n                            itemLayout=\"horizontal\"\n                            size=\"small\"\n                            dataSource={satList}\n                            renderItem={item => (\n                                <List.Item\n                                    actions={[<Checkbox dataInfo={item} onChange={this.onChange}/>]}\n                                >\n                                    <List.Item.Meta\n                                        avatar={<Avatar size={50} src={satellite} />}\n                                        title={<p>{item.satname}</p>}\n                                        description={`Launch Date: ${item.launchDate}`}\n                                    />\n\n                                </List.Item>\n                            )}\n                        />\n                }\n            </div>\n        );\n    }\n}\n\nexport default SatelliteList;\n"]},"metadata":{},"sourceType":"module"}